library(tidyverse)
# Generar un vector del 1 al 10 por medio de un rango.
id <- c(1:10)
# Vector con nombres.
name <- c("John Mendes", "Rob Stewart", "Rachel Abrahamson", "Christy Hickman", "Johnson Harper", "Candace Miller", "Carlson Landy", "Pansy Jordan", "Darius Berry", "Claudia Garcia")
# Vectores de tipos de trabajo.
job_title <- c("Professional", "Programmer", "Management", "Clerical", "Developer", "Programmer", "Management", "Clerical", "Developer", "Programmer")
# Generar data frame manual (Marcos).
employeed <- data_frame(id, name, job_title)
head(employeed)
glimpse(employeed)
str(employeed)
tibble(employeed)
library(tidyr)
library(tidyverse)
library(skimr)
library(janitor)
bookings_df = read_csv("hotel_bookings.csv")
# Creación de un data frame desde una importación de un archivo CSV.
tibble(bookings_df)
head(bookings_df)
str(bookings_df)
glimpse(bookings_df)
colnames(bookings_df)
skim_without_charts(bookings_df)
# Información y metadatos del data frame.
trimmed_df = bookings_df %>% select(hotel)
trimmed_df = bookings_df %>% select(hotel, is_canceled, lead_time)
head(trimmed_df)
# Creación de un sub data frame.
trimmed_df %>% select(hotel, is_canceled, lead_time) %>% rename(hotel_type = hotel)
# Cambiar el nombre de unas de las columnas del sub data frame.
example_df = bookings_df %>% select(arrival_date_year, arrival_date_month) %>% unite(arrival_month_year, c("arrival_date_month", "arrival_date_year"), sep = " ")
head(example_df)
# Uníon de las columna meses con años en un nuevo data frame.
gestos_df <- bookings_df %>% mutate(gest = adults + children + babies)
head(gestos_df)
str(gestos_df)wqe7
str(gestos_df)
names(gestos_df)
glimpse(gestos_df)
# Generar una nueva columna con mutate()
# Y almacenarla en un nuevo df
estadistica_df <- bookings_df %>%
summarize(number_canceled = sum(is_canceled),
average_lead_time = mean(lead_time))
head(estadistica_df)
# Generar una estadistica con la suma total de la columna is_canceled y el promedio de average_lead time columna.
names(bookings_df)
library("dyplir")
library("diplyr")
library(dplyr)
library(palmerpenguins)
data("penguins")
penguins <- penguins %>%
arrange(bill_length_mm)
penguins %>% arrange(bill_length_mm)
# Usar el operador pipe para ordenar la columna 'bill_length_mm' en orden ascendente
penguins <- penguins %>%
arrange(bill_length_mm)
# Mostrar las primeras filas del conjunto de datos ordenado
head(penguins)
install.packages("Tmisc")
