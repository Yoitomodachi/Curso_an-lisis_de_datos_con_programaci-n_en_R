# Autor: Roberto Rico Sandoval.
# Fille: Canalizaciones.
# Date: 18/ 07/ 2024
# Language: R
# Agregar data de R.
data("ToothGrowth")
# Visualizar el data frame.
View(ToothGrowth)
install.packages('dplyr')
# Instalación de la paquetería dplyr.
library(dplyr)
library("dplyr")
# dplyr cargado.
# Creación de un filtro.
filtro = filter(ToothGrowth, dose == 0.5)
# Creación de un filtro.
filtro = filter(ToothGrowth, dose == 0.5)
# Creación de un filtro, solo mostrar valores donde la columna dose sea igual a 0.5
filtro = filter(ToothGrowth, dose == 0.5)
View(filtro)
# Reordenar la tabla de forma ascendente por la función arrange.
# Acomodo con argumento basado en la columna len.
arrange(filtro, len)
# Filtrar y reordenar desde una función anidada.
arrange(filter(ToothGrowth, dose == 1.0))
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(ToothGrowth, dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
arrange(len)
# Para indicar una canalización utilizamos el operador %>%
# En atajo para canalizar es Ctrl + Shift + m
# La canalización hará lo mismo que una función anidadad con un filtro y ordenamiento.
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
arrange(len)
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
arrange(len)
filtro_canalizado = ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_lean = mean(len, na, rm = T),.groups = "drop")
filtro
mdy(“July 10th, 2020”)
library(lubridate)
library("lubridate")
mdy(“July 10th, 2020”)
library(tidyverse)
library(lubridate)
mdy(“July 10th, 2020”)
ymd(20200710)
myd(2020, July 10)
dmy(“7-10-2020”)
mdy("July 10th, 2020")
myd(2020, July 10)
dmy("7-10-2020")
